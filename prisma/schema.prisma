// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role{
  id        Int   @id @default(autoincrement())
  name      String
  users    User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model User {
  id        Int   @id @default(autoincrement())
  email     String   @unique
  name      String?
  password  String
  no_telp   String
  Borrowing Borrowing[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role      Role  @relation(fields: [roleId], references: [id])
  roleId    Int 
}

model Book {
  id        Int   @id @default(autoincrement())
  title     String
  author    String
  description String
  code String
  publisher String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Borrowing Borrowing[]
}

model BorrowStatus {
  id Int @id @default(autoincrement())
  name String 
  borrow Borrowing[]
}

model Borrowing{
  id        Int   @id @default(autoincrement())
  bookId    Int
  userId    Int
  BorrowDateFr DateTime 
  BorrowDateTo DateTime
  statusBorrowId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user      User  @relation(fields: [userId], references: [id])
  book      Book  @relation(fields: [bookId], references: [id])
  borrowStatus BorrowStatus @relation(fields: [statusBorrowId], references: [id])
}